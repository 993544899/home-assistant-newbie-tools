{"version":3,"file":"ba7861d4f10a5f5d028d.chunk.js","sources":["webpack:///ba7861d4f10a5f5d028d.chunk.js"],"sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{102:function(module,__webpack_exports__,__webpack_require__){\"use strict\";var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2),_polymer_iron_a11y_announcer_iron_a11y_announcer_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(82),_polymer_iron_validatable_behavior_iron_validatable_behavior_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(54),_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(4),_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(0),_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(3);function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n      }\\n    </style>\\n    <slot id=\\\"content\\\"></slot>\\n\"]);_templateObject=function _templateObject(){return data};return data}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0)}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/Object(_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__.a)({_template:Object(_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__.a)(_templateObject()),is:\"iron-input\",behaviors:[_polymer_iron_validatable_behavior_iron_validatable_behavior_js__WEBPACK_IMPORTED_MODULE_2__.a],properties:{bindValue:{type:String,value:\"\"},value:{type:String,computed:\"_computeValue(bindValue)\"},allowedPattern:{type:String},autoValidate:{type:Boolean,value:!1},_inputElement:Object},observers:[\"_bindValueChanged(bindValue, _inputElement)\"],listeners:{input:\"_onInput\",keypress:\"_onKeypress\"},created:function created(){_polymer_iron_a11y_announcer_iron_a11y_announcer_js__WEBPACK_IMPORTED_MODULE_1__.a.requestAvailability();this._previousValidInput=\"\";this._patternAlreadyChecked=!1},attached:function attached(){this._observer=Object(_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_4__.b)(this).observeNodes(function(info){this._initSlottedInput()}.bind(this))},detached:function detached(){if(this._observer){Object(_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_4__.b)(this).unobserveNodes(this._observer);this._observer=null}},get inputElement(){return this._inputElement},_initSlottedInput:function _initSlottedInput(){this._inputElement=this.getEffectiveChildren()[0];if(this.inputElement&&this.inputElement.value){this.bindValue=this.inputElement.value}this.fire(\"iron-input-ready\")},get _patternRegExp(){var pattern;if(this.allowedPattern){pattern=new RegExp(this.allowedPattern)}else{switch(this.inputElement.type){case\"number\":pattern=/[0-9.,e-]/;break;}}return pattern},_bindValueChanged:function _bindValueChanged(bindValue,inputElement){if(!inputElement){return}if(bindValue===void 0){inputElement.value=null}else if(bindValue!==inputElement.value){this.inputElement.value=bindValue}if(this.autoValidate){this.validate()}this.fire(\"bind-value-changed\",{value:bindValue})},_onInput:function _onInput(){if(this.allowedPattern&&!this._patternAlreadyChecked){var valid=this._checkPatternValidity();if(!valid){this._announceInvalidCharacter(\"Invalid string of characters not entered.\");this.inputElement.value=this._previousValidInput}}this.bindValue=this._previousValidInput=this.inputElement.value;this._patternAlreadyChecked=!1},_isPrintable:function _isPrintable(event){var anyNonPrintable=8==event.keyCode||9==event.keyCode||13==event.keyCode||27==event.keyCode,mozNonPrintable=19==event.keyCode||20==event.keyCode||45==event.keyCode||46==event.keyCode||144==event.keyCode||145==event.keyCode||32<event.keyCode&&41>event.keyCode||111<event.keyCode&&124>event.keyCode;return!anyNonPrintable&&!(0==event.charCode&&mozNonPrintable)},_onKeypress:function _onKeypress(event){if(!this.allowedPattern&&\"number\"!==this.inputElement.type){return}var regexp=this._patternRegExp;if(!regexp){return}if(event.metaKey||event.ctrlKey||event.altKey){return}this._patternAlreadyChecked=!0;var thisChar=String.fromCharCode(event.charCode);if(this._isPrintable(event)&&!regexp.test(thisChar)){event.preventDefault();this._announceInvalidCharacter(\"Invalid character \"+thisChar+\" not entered.\")}},_checkPatternValidity:function _checkPatternValidity(){var regexp=this._patternRegExp;if(!regexp){return!0}for(var i=0;i<this.inputElement.value.length;i++){if(!regexp.test(this.inputElement.value[i])){return!1}}return!0},validate:function validate(){if(!this.inputElement){this.invalid=!1;return!0}var valid=this.inputElement.checkValidity();if(valid){if(this.required&&\"\"===this.bindValue){valid=!1}else if(this.hasValidator()){valid=_polymer_iron_validatable_behavior_iron_validatable_behavior_js__WEBPACK_IMPORTED_MODULE_2__.a.validate.call(this,this.bindValue)}}this.invalid=!valid;this.fire(\"iron-input-validate\");return valid},_announceInvalidCharacter:function _announceInvalidCharacter(message){this.fire(\"iron-announce\",{text:message})},_computeValue:function _computeValue(bindValue){return bindValue}})},196:function(module,__webpack_exports__,__webpack_require__){\"use strict\";var polymer_legacy=__webpack_require__(2),iron_flex_layout=__webpack_require__(40),iron_control_state=__webpack_require__(32),iron_validatable_behavior=__webpack_require__(54),polymer_fn=__webpack_require__(4),polymer_dom=__webpack_require__(0),html_tag=__webpack_require__(3);function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        position: relative;\\n        width: 400px;\\n        border: 1px solid;\\n        padding: 2px;\\n        -moz-appearance: textarea;\\n        -webkit-appearance: textarea;\\n        overflow: hidden;\\n      }\\n\\n      .mirror-text {\\n        visibility: hidden;\\n        word-wrap: break-word;\\n        @apply --iron-autogrow-textarea;\\n      }\\n\\n      .fit {\\n        @apply --layout-fit;\\n      }\\n\\n      textarea {\\n        position: relative;\\n        outline: none;\\n        border: none;\\n        resize: none;\\n        background: inherit;\\n        color: inherit;\\n        /* see comments in template */\\n        width: 100%;\\n        height: 100%;\\n        font-size: inherit;\\n        font-family: inherit;\\n        line-height: inherit;\\n        text-align: inherit;\\n        @apply --iron-autogrow-textarea;\\n      }\\n\\n      textarea::-webkit-input-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n\\n      textarea:-moz-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n\\n      textarea::-moz-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n\\n      textarea:-ms-input-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n    </style>\\n\\n    <!-- the mirror sizes the input/textarea so it grows with typing -->\\n    <!-- use &#160; instead &nbsp; of to allow this element to be used in XHTML -->\\n    <div id=\\\"mirror\\\" class=\\\"mirror-text\\\" aria-hidden=\\\"true\\\">&nbsp;</div>\\n\\n    <!-- size the input/textarea with a div, because the textarea has intrinsic size in ff -->\\n    <div class=\\\"textarea-container fit\\\">\\n      <textarea id=\\\"textarea\\\" name$=\\\"[[name]]\\\" aria-label$=\\\"[[label]]\\\" autocomplete$=\\\"[[autocomplete]]\\\" autofocus$=\\\"[[autofocus]]\\\" inputmode$=\\\"[[inputmode]]\\\" placeholder$=\\\"[[placeholder]]\\\" readonly$=\\\"[[readonly]]\\\" required$=\\\"[[required]]\\\" disabled$=\\\"[[disabled]]\\\" rows$=\\\"[[rows]]\\\" minlength$=\\\"[[minlength]]\\\" maxlength$=\\\"[[maxlength]]\\\"></textarea>\\n    </div>\\n\"],[\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        position: relative;\\n        width: 400px;\\n        border: 1px solid;\\n        padding: 2px;\\n        -moz-appearance: textarea;\\n        -webkit-appearance: textarea;\\n        overflow: hidden;\\n      }\\n\\n      .mirror-text {\\n        visibility: hidden;\\n        word-wrap: break-word;\\n        @apply --iron-autogrow-textarea;\\n      }\\n\\n      .fit {\\n        @apply --layout-fit;\\n      }\\n\\n      textarea {\\n        position: relative;\\n        outline: none;\\n        border: none;\\n        resize: none;\\n        background: inherit;\\n        color: inherit;\\n        /* see comments in template */\\n        width: 100%;\\n        height: 100%;\\n        font-size: inherit;\\n        font-family: inherit;\\n        line-height: inherit;\\n        text-align: inherit;\\n        @apply --iron-autogrow-textarea;\\n      }\\n\\n      textarea::-webkit-input-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n\\n      textarea:-moz-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n\\n      textarea::-moz-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n\\n      textarea:-ms-input-placeholder {\\n        @apply --iron-autogrow-textarea-placeholder;\\n      }\\n    </style>\\n\\n    <!-- the mirror sizes the input/textarea so it grows with typing -->\\n    <!-- use &#160; instead &nbsp; of to allow this element to be used in XHTML -->\\n    <div id=\\\"mirror\\\" class=\\\"mirror-text\\\" aria-hidden=\\\"true\\\">&nbsp;</div>\\n\\n    <!-- size the input/textarea with a div, because the textarea has intrinsic size in ff -->\\n    <div class=\\\"textarea-container fit\\\">\\n      <textarea id=\\\"textarea\\\" name\\\\$=\\\"[[name]]\\\" aria-label\\\\$=\\\"[[label]]\\\" autocomplete\\\\$=\\\"[[autocomplete]]\\\" autofocus\\\\$=\\\"[[autofocus]]\\\" inputmode\\\\$=\\\"[[inputmode]]\\\" placeholder\\\\$=\\\"[[placeholder]]\\\" readonly\\\\$=\\\"[[readonly]]\\\" required\\\\$=\\\"[[required]]\\\" disabled\\\\$=\\\"[[disabled]]\\\" rows\\\\$=\\\"[[rows]]\\\" minlength\\\\$=\\\"[[minlength]]\\\" maxlength\\\\$=\\\"[[maxlength]]\\\"></textarea>\\n    </div>\\n\"]);_templateObject=function _templateObject(){return data};return data}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0)}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/Object(polymer_fn.a)({_template:Object(html_tag.a)(_templateObject()),is:\"iron-autogrow-textarea\",behaviors:[iron_validatable_behavior.a,iron_control_state.a],properties:{value:{observer:\"_valueChanged\",type:String,notify:!0},bindValue:{observer:\"_bindValueChanged\",type:String,notify:!0},rows:{type:Number,value:1,observer:\"_updateCached\"},maxRows:{type:Number,value:0,observer:\"_updateCached\"},autocomplete:{type:String,value:\"off\"},autofocus:{type:Boolean,value:!1},inputmode:{type:String},placeholder:{type:String},readonly:{type:String},required:{type:Boolean},minlength:{type:Number},maxlength:{type:Number},label:{type:String}},listeners:{input:\"_onInput\"},get textarea(){return this.$.textarea},get selectionStart(){return this.$.textarea.selectionStart},get selectionEnd(){return this.$.textarea.selectionEnd},set selectionStart(value){this.$.textarea.selectionStart=value},set selectionEnd(value){this.$.textarea.selectionEnd=value},attached:function attached(){var IS_IOS=navigator.userAgent.match(/iP(?:[oa]d|hone)/);if(IS_IOS){this.$.textarea.style.marginLeft=\"-3px\"}},validate:function validate(){var valid=this.$.textarea.validity.valid;if(valid){if(this.required&&\"\"===this.value){valid=!1}else if(this.hasValidator()){valid=iron_validatable_behavior.a.validate.call(this,this.value)}}this.invalid=!valid;this.fire(\"iron-input-validate\");return valid},_bindValueChanged:function _bindValueChanged(bindValue){this.value=bindValue},_valueChanged:function _valueChanged(value){var textarea=this.textarea;if(!textarea){return}if(textarea.value!==value){textarea.value=!(value||0===value)?\"\":value}this.bindValue=value;this.$.mirror.innerHTML=this._valueForMirror();this.fire(\"bind-value-changed\",{value:this.bindValue})},_onInput:function _onInput(event){var eventPath=Object(polymer_dom.b)(event).path;this.value=eventPath?eventPath[0].value:event.target.value},_constrain:function _constrain(tokens){var _tokens;tokens=tokens||[\"\"];if(0<this.maxRows&&tokens.length>this.maxRows){_tokens=tokens.slice(0,this.maxRows)}else{_tokens=tokens.slice(0)}while(0<this.rows&&_tokens.length<this.rows){_tokens.push(\"\")}return _tokens.join(\"<br/>\")+\"&#160;\"},_valueForMirror:function _valueForMirror(){var input=this.textarea;if(!input){return}this.tokens=input&&input.value?input.value.replace(/&/gm,\"&amp;\").replace(/\"/gm,\"&quot;\").replace(/'/gm,\"&#39;\").replace(/</gm,\"&lt;\").replace(/>/gm,\"&gt;\").split(\"\\n\"):[\"\"];return this._constrain(this.tokens)},_updateCached:function _updateCached(){this.$.mirror.innerHTML=this._constrain(this.tokens)}});var paper_input_char_counter=__webpack_require__(103),paper_input_container=__webpack_require__(104),paper_input_error=__webpack_require__(105),iron_form_element_behavior=__webpack_require__(53),paper_input_behavior=__webpack_require__(84);function paper_textarea_templateObject(){var data=paper_textarea_taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      label {\\n        pointer-events: none;\\n      }\\n    </style>\\n\\n    <paper-input-container no-label-float$=\\\"[[noLabelFloat]]\\\" always-float-label=\\\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\\\" auto-validate$=\\\"[[autoValidate]]\\\" disabled$=\\\"[[disabled]]\\\" invalid=\\\"[[invalid]]\\\">\\n\\n      <label hidden$=\\\"[[!label]]\\\" aria-hidden=\\\"true\\\" for$=\\\"[[_inputId]]\\\" slot=\\\"label\\\">[[label]]</label>\\n\\n      <iron-autogrow-textarea class=\\\"paper-input-input\\\" slot=\\\"input\\\" id$=\\\"[[_inputId]]\\\" aria-labelledby$=\\\"[[_ariaLabelledBy]]\\\" aria-describedby$=\\\"[[_ariaDescribedBy]]\\\" bind-value=\\\"{{value}}\\\" invalid=\\\"{{invalid}}\\\" validator$=\\\"[[validator]]\\\" disabled$=\\\"[[disabled]]\\\" autocomplete$=\\\"[[autocomplete]]\\\" autofocus$=\\\"[[autofocus]]\\\" inputmode$=\\\"[[inputmode]]\\\" name$=\\\"[[name]]\\\" placeholder$=\\\"[[placeholder]]\\\" readonly$=\\\"[[readonly]]\\\" required$=\\\"[[required]]\\\" minlength$=\\\"[[minlength]]\\\" maxlength$=\\\"[[maxlength]]\\\" autocapitalize$=\\\"[[autocapitalize]]\\\" rows$=\\\"[[rows]]\\\" max-rows$=\\\"[[maxRows]]\\\" on-change=\\\"_onChange\\\"></iron-autogrow-textarea>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[errorMessage]]\\\">\\n        <paper-input-error aria-live=\\\"assertive\\\" slot=\\\"add-on\\\">[[errorMessage]]</paper-input-error>\\n      </template>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[charCounter]]\\\">\\n        <paper-input-char-counter slot=\\\"add-on\\\"></paper-input-char-counter>\\n      </template>\\n\\n    </paper-input-container>\\n\"],[\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      label {\\n        pointer-events: none;\\n      }\\n    </style>\\n\\n    <paper-input-container no-label-float\\\\$=\\\"[[noLabelFloat]]\\\" always-float-label=\\\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\\\" auto-validate\\\\$=\\\"[[autoValidate]]\\\" disabled\\\\$=\\\"[[disabled]]\\\" invalid=\\\"[[invalid]]\\\">\\n\\n      <label hidden\\\\$=\\\"[[!label]]\\\" aria-hidden=\\\"true\\\" for\\\\$=\\\"[[_inputId]]\\\" slot=\\\"label\\\">[[label]]</label>\\n\\n      <iron-autogrow-textarea class=\\\"paper-input-input\\\" slot=\\\"input\\\" id\\\\$=\\\"[[_inputId]]\\\" aria-labelledby\\\\$=\\\"[[_ariaLabelledBy]]\\\" aria-describedby\\\\$=\\\"[[_ariaDescribedBy]]\\\" bind-value=\\\"{{value}}\\\" invalid=\\\"{{invalid}}\\\" validator\\\\$=\\\"[[validator]]\\\" disabled\\\\$=\\\"[[disabled]]\\\" autocomplete\\\\$=\\\"[[autocomplete]]\\\" autofocus\\\\$=\\\"[[autofocus]]\\\" inputmode\\\\$=\\\"[[inputmode]]\\\" name\\\\$=\\\"[[name]]\\\" placeholder\\\\$=\\\"[[placeholder]]\\\" readonly\\\\$=\\\"[[readonly]]\\\" required\\\\$=\\\"[[required]]\\\" minlength\\\\$=\\\"[[minlength]]\\\" maxlength\\\\$=\\\"[[maxlength]]\\\" autocapitalize\\\\$=\\\"[[autocapitalize]]\\\" rows\\\\$=\\\"[[rows]]\\\" max-rows\\\\$=\\\"[[maxRows]]\\\" on-change=\\\"_onChange\\\"></iron-autogrow-textarea>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[errorMessage]]\\\">\\n        <paper-input-error aria-live=\\\"assertive\\\" slot=\\\"add-on\\\">[[errorMessage]]</paper-input-error>\\n      </template>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[charCounter]]\\\">\\n        <paper-input-char-counter slot=\\\"add-on\\\"></paper-input-char-counter>\\n      </template>\\n\\n    </paper-input-container>\\n\"]);paper_textarea_templateObject=function _templateObject(){return data};return data}function paper_textarea_taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0)}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/Object(polymer_fn.a)({_template:Object(html_tag.a)(paper_textarea_templateObject()),is:\"paper-textarea\",behaviors:[paper_input_behavior.a,iron_form_element_behavior.a],properties:{_ariaLabelledBy:{observer:\"_ariaLabelledByChanged\",type:String},_ariaDescribedBy:{observer:\"_ariaDescribedByChanged\",type:String},value:{type:String},rows:{type:Number,value:1},maxRows:{type:Number,value:0}},get selectionStart(){return this.$.input.textarea.selectionStart},set selectionStart(start){this.$.input.textarea.selectionStart=start},get selectionEnd(){return this.$.input.textarea.selectionEnd},set selectionEnd(end){this.$.input.textarea.selectionEnd=end},_ariaLabelledByChanged:function _ariaLabelledByChanged(ariaLabelledBy){this._focusableElement.setAttribute(\"aria-labelledby\",ariaLabelledBy)},_ariaDescribedByChanged:function _ariaDescribedByChanged(ariaDescribedBy){this._focusableElement.setAttribute(\"aria-describedby\",ariaDescribedBy)},get _focusableElement(){return this.inputElement.textarea}})},390:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return AppStorageBehavior});var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2),SPLICES_RX=/\\.splices$/,LENGTH_RX=/\\.length$/,NUMBER_RX=/\\.?#?([0-9]+)$/,AppStorageBehavior={properties:{data:{type:Object,notify:!0,value:function value(){return this.zeroValue}},sequentialTransactions:{type:Boolean,value:!1},log:{type:Boolean,value:!1}},observers:[\"__dataChanged(data.*)\"],created:function created(){this.__initialized=!1;this.__syncingToMemory=!1;this.__initializingStoredValue=null;this.__transactionQueueAdvances=Promise.resolve()},ready:function ready(){this._initializeStoredValue()},get isNew(){return!0},get transactionsComplete(){return this.__transactionQueueAdvances},get zeroValue(){return},saveValue:function saveValue(args){return Promise.resolve()},reset:function reset(){},destroy:function destroy(){this.data=this.zeroValue;return this.saveValue()},initializeStoredValue:function initializeStoredValue(){if(this.isNew){return Promise.resolve()}return this._getStoredValue(\"data\").then(function(data){this._log(\"Got stored value!\",data,this.data);if(null==data){return this._setStoredValue(\"data\",this.data||this.zeroValue)}else{this.syncToMemory(function(){this.set(\"data\",data)})}}.bind(this))},getStoredValue:function getStoredValue(storagePath){return Promise.resolve()},setStoredValue:function setStoredValue(storagePath,value){return Promise.resolve(value)},memoryPathToStoragePath:function memoryPathToStoragePath(path){return path},storagePathToMemoryPath:function storagePathToMemoryPath(path){return path},syncToMemory:function syncToMemory(operation){if(this.__syncingToMemory){return}this._group(\"Sync to memory.\");this.__syncingToMemory=!0;operation.call(this);this.__syncingToMemory=!1;this._groupEnd(\"Sync to memory.\")},valueIsEmpty:function valueIsEmpty(value){if(Array.isArray(value)){return 0===value.length}else if(Object.prototype.isPrototypeOf(value)){return 0===Object.keys(value).length}else{return null==value}},_getStoredValue:function _getStoredValue(path){return this.getStoredValue(this.memoryPathToStoragePath(path))},_setStoredValue:function _setStoredValue(path,value){return this.setStoredValue(this.memoryPathToStoragePath(path),value)},_enqueueTransaction:function _enqueueTransaction(transaction){if(this.sequentialTransactions){transaction=transaction.bind(this)}else{var result=transaction.call(this);transaction=function transaction(){return result}}return this.__transactionQueueAdvances=this.__transactionQueueAdvances.then(transaction).catch(function(error){this._error(\"Error performing queued transaction.\",error)}.bind(this))},_log:function _log(){if(this.log){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key]}console.log.apply(console,args)}},_error:function _error(){if(this.log){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2]}console.error.apply(console,args)}},_group:function _group(){if(this.log){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3]}console.group.apply(console,args)}},_groupEnd:function _groupEnd(){if(this.log){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4]}console.groupEnd.apply(console,args)}},_initializeStoredValue:function _initializeStoredValue(){if(this.__initializingStoredValue){return}this._group(\"Initializing stored value.\");var initializingStoredValue=this.__initializingStoredValue=this.initializeStoredValue().then(function(){this.__initialized=!0;this.__initializingStoredValue=null;this._groupEnd(\"Initializing stored value.\")}.bind(this)).catch(function(e){this.__initializingStoredValue=null;this._groupEnd(\"Initializing stored value.\")}.bind(this));return this._enqueueTransaction(function(){return initializingStoredValue})},__dataChanged:function __dataChanged(change){if(this.isNew||this.__syncingToMemory||!this.__initialized||this.__pathCanBeIgnored(change.path)){return}var path=this.__normalizeMemoryPath(change.path),value=change.value,indexSplices=value&&value.indexSplices;this._enqueueTransaction(function(){this._log(\"Setting\",path+\":\",indexSplices||value);if(indexSplices&&this.__pathIsSplices(path)){path=this.__parentPath(path);value=this.get(path)}return this._setStoredValue(path,value)})},__normalizeMemoryPath:function __normalizeMemoryPath(path){for(var parts=path.split(\".\"),parentPath=[],currentPath=[],normalizedPath=[],index,i=0;i<parts.length;++i){currentPath.push(parts[i]);if(/^#/.test(parts[i])){normalizedPath.push(this.get(parentPath).indexOf(this.get(currentPath)))}else{normalizedPath.push(parts[i])}parentPath.push(parts[i])}return normalizedPath.join(\".\")},__parentPath:function __parentPath(path){var parentPath=path.split(\".\");return parentPath.slice(0,parentPath.length-1).join(\".\")},__pathCanBeIgnored:function __pathCanBeIgnored(path){return LENGTH_RX.test(path)&&Array.isArray(this.get(this.__parentPath(path)))},__pathIsSplices:function __pathIsSplices(path){return SPLICES_RX.test(path)&&Array.isArray(this.get(this.__parentPath(path)))},__pathRefersToArray:function __pathRefersToArray(path){return(SPLICES_RX.test(path)||LENGTH_RX.test(path))&&Array.isArray(this.get(this.__parentPath(path)))},__pathTailToIndex:function __pathTailToIndex(path){var tail=path.split(\".\").pop();return window.parseInt(tail.replace(NUMBER_RX,\"$1\"),10)}};/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/},80:function(module,__webpack_exports__,__webpack_require__){\"use strict\";var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2),_polymer_iron_input_iron_input_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(102),_paper_input_char_counter_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(103),_paper_input_container_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(104),_paper_input_error_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(105),_polymer_iron_form_element_behavior_iron_form_element_behavior_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(53),_polymer_polymer_lib_elements_dom_module_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(37),_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(4),_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(3),_paper_input_behavior_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(84);function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      :host([focused]) {\\n        outline: none;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      input {\\n        /* Firefox sets a min-width on the input, which can cause layout issues */\\n        min-width: 0;\\n      }\\n\\n      /* In 1.x, the <input> is distributed to paper-input-container, which styles it.\\n      In 2.x the <iron-input> is distributed to paper-input-container, which styles\\n      it, but in order for this to work correctly, we need to reset some\\n      of the native input's properties to inherit (from the iron-input) */\\n      iron-input > input {\\n        @apply --paper-input-container-shared-input-style;\\n        font-family: inherit;\\n        font-weight: inherit;\\n        font-size: inherit;\\n        letter-spacing: inherit;\\n        word-spacing: inherit;\\n        line-height: inherit;\\n        text-shadow: inherit;\\n        color: inherit;\\n        cursor: inherit;\\n      }\\n\\n      input:disabled {\\n        @apply --paper-input-container-input-disabled;\\n      }\\n\\n      input::-webkit-outer-spin-button,\\n      input::-webkit-inner-spin-button {\\n        @apply --paper-input-container-input-webkit-spinner;\\n      }\\n\\n      input::-webkit-clear-button {\\n        @apply --paper-input-container-input-webkit-clear;\\n      }\\n\\n      input::-webkit-calendar-picker-indicator {\\n        @apply --paper-input-container-input-webkit-calendar-picker-indicator;\\n      }\\n\\n      input::-webkit-input-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input:-moz-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input::-moz-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input::-ms-clear {\\n        @apply --paper-input-container-ms-clear;\\n      }\\n\\n      input::-ms-reveal {\\n        @apply --paper-input-container-ms-reveal;\\n      }\\n\\n      input:-ms-input-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      label {\\n        pointer-events: none;\\n      }\\n    </style>\\n\\n    <paper-input-container id=\\\"container\\\" no-label-float=\\\"[[noLabelFloat]]\\\" always-float-label=\\\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\\\" auto-validate$=\\\"[[autoValidate]]\\\" disabled$=\\\"[[disabled]]\\\" invalid=\\\"[[invalid]]\\\">\\n\\n      <slot name=\\\"prefix\\\" slot=\\\"prefix\\\"></slot>\\n\\n      <label hidden$=\\\"[[!label]]\\\" aria-hidden=\\\"true\\\" for$=\\\"[[_inputId]]\\\" slot=\\\"label\\\">[[label]]</label>\\n\\n      <!-- Need to bind maxlength so that the paper-input-char-counter works correctly -->\\n      <iron-input bind-value=\\\"{{value}}\\\" slot=\\\"input\\\" class=\\\"input-element\\\" id$=\\\"[[_inputId]]\\\" maxlength$=\\\"[[maxlength]]\\\" allowed-pattern=\\\"[[allowedPattern]]\\\" invalid=\\\"{{invalid}}\\\" validator=\\\"[[validator]]\\\">\\n        <input aria-labelledby$=\\\"[[_ariaLabelledBy]]\\\" aria-describedby$=\\\"[[_ariaDescribedBy]]\\\" disabled$=\\\"[[disabled]]\\\" title$=\\\"[[title]]\\\" type$=\\\"[[type]]\\\" pattern$=\\\"[[pattern]]\\\" required$=\\\"[[required]]\\\" autocomplete$=\\\"[[autocomplete]]\\\" autofocus$=\\\"[[autofocus]]\\\" inputmode$=\\\"[[inputmode]]\\\" minlength$=\\\"[[minlength]]\\\" maxlength$=\\\"[[maxlength]]\\\" min$=\\\"[[min]]\\\" max$=\\\"[[max]]\\\" step$=\\\"[[step]]\\\" name$=\\\"[[name]]\\\" placeholder$=\\\"[[placeholder]]\\\" readonly$=\\\"[[readonly]]\\\" list$=\\\"[[list]]\\\" size$=\\\"[[size]]\\\" autocapitalize$=\\\"[[autocapitalize]]\\\" autocorrect$=\\\"[[autocorrect]]\\\" on-change=\\\"_onChange\\\" tabindex$=\\\"[[tabIndex]]\\\" autosave$=\\\"[[autosave]]\\\" results$=\\\"[[results]]\\\" accept$=\\\"[[accept]]\\\" multiple$=\\\"[[multiple]]\\\">\\n      </iron-input>\\n\\n      <slot name=\\\"suffix\\\" slot=\\\"suffix\\\"></slot>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[errorMessage]]\\\">\\n        <paper-input-error aria-live=\\\"assertive\\\" slot=\\\"add-on\\\">[[errorMessage]]</paper-input-error>\\n      </template>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[charCounter]]\\\">\\n        <paper-input-char-counter slot=\\\"add-on\\\"></paper-input-char-counter>\\n      </template>\\n\\n    </paper-input-container>\\n  \"],[\"\\n    <style>\\n      :host {\\n        display: block;\\n      }\\n\\n      :host([focused]) {\\n        outline: none;\\n      }\\n\\n      :host([hidden]) {\\n        display: none !important;\\n      }\\n\\n      input {\\n        /* Firefox sets a min-width on the input, which can cause layout issues */\\n        min-width: 0;\\n      }\\n\\n      /* In 1.x, the <input> is distributed to paper-input-container, which styles it.\\n      In 2.x the <iron-input> is distributed to paper-input-container, which styles\\n      it, but in order for this to work correctly, we need to reset some\\n      of the native input's properties to inherit (from the iron-input) */\\n      iron-input > input {\\n        @apply --paper-input-container-shared-input-style;\\n        font-family: inherit;\\n        font-weight: inherit;\\n        font-size: inherit;\\n        letter-spacing: inherit;\\n        word-spacing: inherit;\\n        line-height: inherit;\\n        text-shadow: inherit;\\n        color: inherit;\\n        cursor: inherit;\\n      }\\n\\n      input:disabled {\\n        @apply --paper-input-container-input-disabled;\\n      }\\n\\n      input::-webkit-outer-spin-button,\\n      input::-webkit-inner-spin-button {\\n        @apply --paper-input-container-input-webkit-spinner;\\n      }\\n\\n      input::-webkit-clear-button {\\n        @apply --paper-input-container-input-webkit-clear;\\n      }\\n\\n      input::-webkit-calendar-picker-indicator {\\n        @apply --paper-input-container-input-webkit-calendar-picker-indicator;\\n      }\\n\\n      input::-webkit-input-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input:-moz-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input::-moz-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      input::-ms-clear {\\n        @apply --paper-input-container-ms-clear;\\n      }\\n\\n      input::-ms-reveal {\\n        @apply --paper-input-container-ms-reveal;\\n      }\\n\\n      input:-ms-input-placeholder {\\n        color: var(--paper-input-container-color, var(--secondary-text-color));\\n      }\\n\\n      label {\\n        pointer-events: none;\\n      }\\n    </style>\\n\\n    <paper-input-container id=\\\"container\\\" no-label-float=\\\"[[noLabelFloat]]\\\" always-float-label=\\\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\\\" auto-validate\\\\$=\\\"[[autoValidate]]\\\" disabled\\\\$=\\\"[[disabled]]\\\" invalid=\\\"[[invalid]]\\\">\\n\\n      <slot name=\\\"prefix\\\" slot=\\\"prefix\\\"></slot>\\n\\n      <label hidden\\\\$=\\\"[[!label]]\\\" aria-hidden=\\\"true\\\" for\\\\$=\\\"[[_inputId]]\\\" slot=\\\"label\\\">[[label]]</label>\\n\\n      <!-- Need to bind maxlength so that the paper-input-char-counter works correctly -->\\n      <iron-input bind-value=\\\"{{value}}\\\" slot=\\\"input\\\" class=\\\"input-element\\\" id\\\\$=\\\"[[_inputId]]\\\" maxlength\\\\$=\\\"[[maxlength]]\\\" allowed-pattern=\\\"[[allowedPattern]]\\\" invalid=\\\"{{invalid}}\\\" validator=\\\"[[validator]]\\\">\\n        <input aria-labelledby\\\\$=\\\"[[_ariaLabelledBy]]\\\" aria-describedby\\\\$=\\\"[[_ariaDescribedBy]]\\\" disabled\\\\$=\\\"[[disabled]]\\\" title\\\\$=\\\"[[title]]\\\" type\\\\$=\\\"[[type]]\\\" pattern\\\\$=\\\"[[pattern]]\\\" required\\\\$=\\\"[[required]]\\\" autocomplete\\\\$=\\\"[[autocomplete]]\\\" autofocus\\\\$=\\\"[[autofocus]]\\\" inputmode\\\\$=\\\"[[inputmode]]\\\" minlength\\\\$=\\\"[[minlength]]\\\" maxlength\\\\$=\\\"[[maxlength]]\\\" min\\\\$=\\\"[[min]]\\\" max\\\\$=\\\"[[max]]\\\" step\\\\$=\\\"[[step]]\\\" name\\\\$=\\\"[[name]]\\\" placeholder\\\\$=\\\"[[placeholder]]\\\" readonly\\\\$=\\\"[[readonly]]\\\" list\\\\$=\\\"[[list]]\\\" size\\\\$=\\\"[[size]]\\\" autocapitalize\\\\$=\\\"[[autocapitalize]]\\\" autocorrect\\\\$=\\\"[[autocorrect]]\\\" on-change=\\\"_onChange\\\" tabindex\\\\$=\\\"[[tabIndex]]\\\" autosave\\\\$=\\\"[[autosave]]\\\" results\\\\$=\\\"[[results]]\\\" accept\\\\$=\\\"[[accept]]\\\" multiple\\\\$=\\\"[[multiple]]\\\">\\n      </iron-input>\\n\\n      <slot name=\\\"suffix\\\" slot=\\\"suffix\\\"></slot>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[errorMessage]]\\\">\\n        <paper-input-error aria-live=\\\"assertive\\\" slot=\\\"add-on\\\">[[errorMessage]]</paper-input-error>\\n      </template>\\n\\n      <template is=\\\"dom-if\\\" if=\\\"[[charCounter]]\\\">\\n        <paper-input-char-counter slot=\\\"add-on\\\"></paper-input-char-counter>\\n      </template>\\n\\n    </paper-input-container>\\n  \"]);_templateObject=function _templateObject(){return data};return data}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0)}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/Object(_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_7__.a)({is:\"paper-input\",_template:Object(_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_8__.a)(_templateObject()),behaviors:[_paper_input_behavior_js__WEBPACK_IMPORTED_MODULE_9__.a,_polymer_iron_form_element_behavior_iron_form_element_behavior_js__WEBPACK_IMPORTED_MODULE_5__.a],properties:{value:{type:String}},get _focusableElement(){return this.inputElement._inputElement},listeners:{\"iron-input-ready\":\"_onIronInputReady\"},_onIronInputReady:function _onIronInputReady(){if(!this.$.nativeInput){this.$.nativeInput=this.$$(\"input\")}if(this.inputElement&&-1!==this._typesThatHaveText.indexOf(this.$.nativeInput.type)){this.alwaysFloatLabel=!0}if(!!this.inputElement.bindValue){this.$.container._handleValueAndAutoValidate(this.inputElement)}}})},82:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return IronA11yAnnouncer});var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2),_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(4),_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(3);function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        position: fixed;\\n        clip: rect(0px,0px,0px,0px);\\n      }\\n    </style>\\n    <div aria-live$=\\\"[[mode]]\\\">[[_text]]</div>\\n\"],[\"\\n    <style>\\n      :host {\\n        display: inline-block;\\n        position: fixed;\\n        clip: rect(0px,0px,0px,0px);\\n      }\\n    </style>\\n    <div aria-live\\\\$=\\\"[[mode]]\\\">[[_text]]</div>\\n\"]);_templateObject=function _templateObject(){return data};return data}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0)}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/var IronA11yAnnouncer=Object(_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__.a)({_template:Object(_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__.a)(_templateObject()),is:\"iron-a11y-announcer\",properties:{mode:{type:String,value:\"polite\"},_text:{type:String,value:\"\"}},created:function created(){if(!IronA11yAnnouncer.instance){IronA11yAnnouncer.instance=this}document.body.addEventListener(\"iron-announce\",this._onIronAnnounce.bind(this))},announce:function announce(text){this._text=\"\";this.async(function(){this._text=text},100)},_onIronAnnounce:function _onIronAnnounce(event){if(event.detail&&event.detail.text){this.announce(event.detail.text)}}});IronA11yAnnouncer.instance=null;IronA11yAnnouncer.requestAvailability=function(){if(!IronA11yAnnouncer.instance){IronA11yAnnouncer.instance=document.createElement(\"iron-a11y-announcer\")}document.body.appendChild(IronA11yAnnouncer.instance)}}}]);"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":""}