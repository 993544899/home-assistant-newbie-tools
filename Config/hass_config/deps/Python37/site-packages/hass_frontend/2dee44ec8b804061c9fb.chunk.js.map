{"version":3,"file":"2dee44ec8b804061c9fb.chunk.js","sources":["webpack:///2dee44ec8b804061c9fb.chunk.js"],"sourcesContent":["(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{787:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__);var app_header_layout=__webpack_require__(135),app_header=__webpack_require__(134),app_toolbar=__webpack_require__(111),paper_listbox=__webpack_require__(129),paper_card=__webpack_require__(160),paper_checkbox=__webpack_require__(138),paper_item=__webpack_require__(127),html_tag=__webpack_require__(3),polymer_element=__webpack_require__(20),moment=__webpack_require__(396),moment_default=__webpack_require__.n(moment),dates=__webpack_require__(210),dates_default=__webpack_require__.n(dates),ha_menu_button=__webpack_require__(136),ha_style=__webpack_require__(101),preact_compat_es=__webpack_require__(172),lib=__webpack_require__(468),lib_default=__webpack_require__.n(lib),events_mixin=__webpack_require__(81);lib_default.a.setLocalizer(lib_default.a.momentLocalizer(moment_default.a));const DEFAULT_VIEW=\"month\";class ha_big_calendar_HaBigCalendar extends Object(events_mixin.a)(polymer_element.a){static get template(){return html_tag.a`\n      <link\n        rel=\"stylesheet\"\n        href=\"/static/panels/calendar/react-big-calendar.css\"\n      />\n      <style>\n        div#root {\n          height: 100%;\n          width: 100%;\n        }\n      </style>\n      <div id=\"root\"></div>\n    `}static get properties(){return{events:{type:Array,observer:\"_update\"}}}_update(events){const allViews=lib_default.a.Views.values,BCElement=preact_compat_es[\"default\"].createElement(lib_default.a,{events:events,views:allViews,popup:!0,onNavigate:(date,viewName)=>this.fire(\"navigate\",{date,viewName}),onView:viewName=>this.fire(\"view-changed\",{viewName}),eventPropGetter:this._setEventStyle,defaultView:DEFAULT_VIEW,defaultDate:new Date});Object(preact_compat_es.render)(BCElement,this.$.root)}_setEventStyle(event){const newStyle={};if(event.color){newStyle.backgroundColor=event.color}return{style:newStyle}}}customElements.define(\"ha-big-calendar\",ha_big_calendar_HaBigCalendar);var localize_mixin=__webpack_require__(107);const ha_panel_calendar_DEFAULT_VIEW=\"month\";class ha_panel_calendar_HaPanelCalendar extends Object(localize_mixin.a)(polymer_element.a){static get template(){return html_tag.a`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 16px;\n          @apply --layout-horizontal;\n        }\n\n        ha-big-calendar {\n          min-height: 500px;\n          min-width: 100%;\n        }\n\n        #calendars {\n          padding-right: 16px;\n          width: 15%;\n          min-width: 170px;\n        }\n\n        paper-item {\n          cursor: pointer;\n        }\n\n        div.all_calendars {\n          ￼height: 20px;\n          ￼text-align: center;\n        }\n\n        .iron-selected {\n          background-color: #e5e5e5;\n          font-weight: normal;\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column;\n        }\n        :host([narrow]) #calendars {\n          margin-bottom: 24px;\n          width: 100%;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button\n              narrow=\"[[narrow]]\"\n              show-menu=\"[[showMenu]]\"\n            ></ha-menu-button>\n            <div main-title>[[localize('panel.calendar')]]</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class=\"flex content\">\n          <div id=\"calendars\" class=\"layout vertical wrap\">\n            <paper-card heading=\"Calendars\">\n              <paper-listbox\n                id=\"calendar_list\"\n                multi\n                on-selected-items-changed=\"_fetchData\"\n                selected-values=\"{{selectedCalendars}}\"\n                attr-for-selected=\"item-name\"\n              >\n                <template is=\"dom-repeat\" items=\"[[calendars]]\">\n                  <paper-item item-name=\"[[item.entity_id]]\">\n                    <span\n                      class=\"calendar_color\"\n                      style$=\"background-color: [[item.color]]\"\n                    ></span>\n                    <span class=\"calendar_color_spacer\"></span> [[item.name]]\n                  </paper-item>\n                </template>\n              </paper-listbox>\n            </paper-card>\n          </div>\n          <div class=\"flex layout horizontal wrap\">\n            <ha-big-calendar\n              default-date=\"[[currentDate]]\"\n              default-view=\"[[currentView]]\"\n              on-navigate=\"_handleNavigate\"\n              on-view=\"_handleViewChanged\"\n              events=\"[[events]]\"\n            >\n            </ha-big-calendar>\n          </div>\n        </div>\n      </app-header-layout>\n    `}static get properties(){return{hass:Object,currentView:{type:String,value:ha_panel_calendar_DEFAULT_VIEW},currentDate:{type:Object,value:new Date},events:{type:Array,value:[]},calendars:{type:Array,value:[]},selectedCalendars:{type:Array,value:[]},narrow:{type:Boolean,reflectToAttribute:!0},showMenu:{type:Boolean,value:!1}}}connectedCallback(){super.connectedCallback();this._fetchCalendars()}_fetchCalendars(){this.hass.callApi(\"get\",\"calendars\").then(result=>{this.calendars=result;this.selectedCalendars=result.map(cal=>cal.entity_id)})}_fetchData(){const start=dates_default.a.firstVisibleDay(this.currentDate).toISOString(),end=dates_default.a.lastVisibleDay(this.currentDate).toISOString(),params=encodeURI(`?start=${start}&end=${end}`),calls=this.selectedCalendars.map(cal=>this.hass.callApi(\"get\",`calendars/${cal}${params}`));Promise.all(calls).then(results=>{const tmpEvents=[];results.forEach(res=>{res.forEach(ev=>{ev.start=new Date(ev.start);if(ev.end){ev.end=new Date(ev.end)}else{ev.end=null}tmpEvents.push(ev)})});this.events=tmpEvents})}_getDateRange(){let startDate,endDate;if(\"day\"===this.currentView){startDate=moment_default()(this.currentDate).startOf(\"day\");endDate=moment_default()(this.currentDate).startOf(\"day\")}else if(\"week\"===this.currentView){startDate=moment_default()(this.currentDate).startOf(\"isoWeek\");endDate=moment_default()(this.currentDate).endOf(\"isoWeek\")}else if(\"month\"===this.currentView){startDate=moment_default()(this.currentDate).startOf(\"month\").subtract(7,\"days\");endDate=moment_default()(this.currentDate).endOf(\"month\").add(7,\"days\")}else if(\"agenda\"===this.currentView){startDate=moment_default()(this.currentDate).startOf(\"day\");endDate=moment_default()(this.currentDate).endOf(\"day\").add(1,\"month\")}return[startDate.toISOString(),endDate.toISOString()]}_handleViewChanged(ev){this.currentView=ev.detail.viewName;this._fetchData()}_handleNavigate(ev){this.currentDate=ev.detail.date;this.currentView=ev.detail.viewName;this._fetchData()}}customElements.define(\"ha-panel-calendar\",ha_panel_calendar_HaPanelCalendar)}}]);"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":""}